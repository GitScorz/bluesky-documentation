"use strict";(self.webpackChunkbluesky_documentation=self.webpackChunkbluesky_documentation||[]).push([[497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),m=l,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:l,i[1]=a;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5851:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(7462),l=(n(7294),n(3905));const o={id:"logger",title:"Logger Component",sidebar_label:"Logger"},i=void 0,a={unversionedId:"documentation/base/logger",id:"documentation/base/logger",title:"Logger Component",description:"Component Available",source:"@site/docs/documentation/base/logger.md",sourceDirName:"documentation/base",slug:"/documentation/base/logger",permalink:"/bluesky-documentation/docs/documentation/base/logger",draft:!1,editUrl:"https://github.com/GitScorz/bluesky/edit/documentation/docs/documentation/base/logger.md",tags:[],version:"current",frontMatter:{id:"logger",title:"Logger Component",sidebar_label:"Logger"},sidebar:"mySidebar",previous:{title:"Discord",permalink:"/bluesky-documentation/docs/documentation/base/discord"},next:{title:"Scaleform",permalink:"/bluesky-documentation/docs/documentation/base/scaleform"}},s={},c=[{value:"Required Attributes",id:"required-attributes",level:2},{value:"<strong>Server</strong>",id:"server",level:3},{value:"<strong>Client</strong>",id:"client",level:3},{value:"Methods",id:"methods",level:2},{value:"<strong>Server</strong>",id:"server-1",level:3},{value:"<code>Log</code>",id:"log",level:4},{value:"<code>Discord Flags</code>",id:"discord-flags",level:5},{value:"<strong>Client</strong>",id:"client-1",level:3},{value:"<code>Log</code>",id:"log-1",level:4},{value:"Events",id:"events",level:2},{value:"<strong>Server</strong>",id:"server-2",level:3},{value:"<strong>Client</strong>",id:"client-2",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{style:{width:"fit-content",margin:"auto",textAlign:"center"}},(0,l.kt)("table",null,(0,l.kt)("tr",null,(0,l.kt)("td",{colspan:"2"},"Component Available")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"Server"),(0,l.kt)("td",null,"Yes")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"Client"),(0,l.kt)("td",null,"Yes")))),(0,l.kt)("p",null,"This is the logger class, which will output data to various locations"),(0,l.kt)("h2",{id:"required-attributes"},"Required Attributes"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"server"},(0,l.kt)("strong",{parentName:"h3"},"Server")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Log: function"))),(0,l.kt)("h3",{id:"client"},(0,l.kt)("strong",{parentName:"h3"},"Client")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Log: function"))),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"server-1"},(0,l.kt)("strong",{parentName:"h3"},"Server")),(0,l.kt)("h4",{id:"log"},(0,l.kt)("inlineCode",{parentName:"h4"},"Log")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Parameters"),": ",(0,l.kt)("span",{style:{color:"#cecece"}},(0,l.kt)("inlineCode",{parentName:"li"},"component: string, log: string, flags: table, extra: mixed"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Return"),": ",(0,l.kt)("span",{style:{color:"#cecece"}},(0,l.kt)("inlineCode",{parentName:"li"},"None"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Description"),": ",(0,l.kt)("span",{style:{color:"#cecece"}},"Depending on the provided flag, this will log the input data.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Flags"),": ",(0,l.kt)("span",{style:{color:"#cecece"}},(0,l.kt)("inlineCode",{parentName:"li"},"console: boolean")," - If true, will print to console.",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"li"},"file: boolean")," - If true, will print to file.",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"li"},"database: boolean")," - If true, will save log entry to databse.",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"li"},"discord: boolean or table")," - If boolean & true, will simply print a basic message to Discord. If table, and provided values set will send an embeded message to Discord."))),(0,l.kt)("h5",{id:"discord-flags"},(0,l.kt)("inlineCode",{parentName:"h5"},"Discord Flags")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"color: info, success, warning, error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"webhook: Link to webhook if desired to log to non-standard logging channel"))),(0,l.kt)("h3",{id:"client-1"},(0,l.kt)("strong",{parentName:"h3"},"Client")),(0,l.kt)("h4",{id:"log-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"Log")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Parameters"),": ",(0,l.kt)("span",{style:{color:"#cecece"}},(0,l.kt)("inlineCode",{parentName:"li"},"component: string, log: string"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Return"),": ",(0,l.kt)("span",{style:{color:"#cecece"}},(0,l.kt)("inlineCode",{parentName:"li"},"None"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Description"),": ",(0,l.kt)("span",{style:{color:"#cecece"}},"Will print out log into F8 console. ",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("b",null,"NOTE:")," As this is a component defined in a shared file, the client function can also take a flags & extra parameter. These are unused on client."))),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"server-2"},(0,l.kt)("strong",{parentName:"h3"},"Server")),(0,l.kt)("p",null,"No server events are fired from this component."),(0,l.kt)("h3",{id:"client-2"},(0,l.kt)("strong",{parentName:"h3"},"Client")),(0,l.kt)("p",null,"No client events are fired from this component."))}d.isMDXComponent=!0}}]);